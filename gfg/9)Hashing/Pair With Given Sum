//Naive solution is 0(n^2), do it in 0(n).

#include<bits/stdc++.h>
using namespace std;
int main(){
  
  int arr[] = {5,6,-1,9};
  int sum = 2;
  int size = sizeof(arr)/sizeof(arr[0]);
  unordered_set<int> s;
  for(int i=0;i<size;++i){
      if( s.find(sum-arr[i]) != s.end() ){
          cout<<"YES";
          return 0;
      }
      s.insert(arr[i]);
  }
  cout<<"NO";
  return 0;
  }
  
  
  //It is possible to solve above problem in O(n) using hashing irrespective of the fact that whether array is sorted or not.
  //There is another O(n) solution if array is sorted, then we can use 2 pointer approach as well.
