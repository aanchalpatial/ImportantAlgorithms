//1) Data Structure and their equivalents in C++ STL
	
	//1) Hash : unordered_set, unordered_map
	//2) Linked List : forward_list, list
	//3) Stack : Stack
	//4) Queue : queue
	//5) Balanced BST : set, map
	//6) Heap : priority_queue


//2) Does in-place mean constant space complexity?

No. By definition, an in-place algorithm is an algorithm which transforms input using no auxiliary data structure.

The tricky part is that space is used by many actors, not only by data structures. The classical example is to use
recursive function without any auxiliary data structures.

Is it in-place? Yes.
Is it constant space? No, because of recursion stack.

