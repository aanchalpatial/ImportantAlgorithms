//Given a boolean matrix mat[r][c] of size r X c, modify it such that if a matrix 
//cell mat[i][j] is 1 (or true) then make all the cells of ith row and jth column as 1.

/*1) Create two temporary arrays row[M] and col[N]. Initialize all values of row[] and col[] as 0.
2) Traverse the input matrix mat[M][N]. If you see an entry mat[i][j] as true, then mark row[i] and col[j] as true.
3) Traverse the input matrix mat[M][N] again. For each entry mat[i][j], check the values of row[i] and col[j]. 
   If any of the two values (row[i] or col[j]) is true, then mark mat[i][j] as true.*/

void booleanMatrix(int r, int c, int a[SIZE][SIZE])
{
    
    int row[r], col[c];
    memset(row, 0, sizeof(row));
    memset(col, 0, sizeof(col));
    
    for(int i=0;i<r;++i){
        for(int j=0;j<c;++j){
            if(a[i][j] == 1) {
                row[i] = 1;
                col[j] = 1;
            }
        }
    }
    
    for(int i=0;i<r;++i){
        for(int j=0;j<c;++j){
            if( row[i] == 1 || col[j] == 1) {
                a[i][j] = 1;
            }
        }
    }
    
    for(int i=0;i<r;++i){
        for(int j=0;j<c;++j){
            cout<<a[i][j]<<" ";
        }
        cout<<endl;
    }
    
}
