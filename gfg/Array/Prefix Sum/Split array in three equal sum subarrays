/*Consider an array A of n integers. Determine if array A can be split into three consecutive parts such that sum of each 
part is equal. If yes then print any index pair(i, j) such that sum(arr[0..i]) = sum(arr[i+1..j]) = sum(arr[j+1..n-1]),
otherwise print -1.*/

#include<bits/stdc++.h>
using namespace std;

int main(){
  int arr[] =  { 1, 3, 4, 0, 4 }; 
  int n = sizeof(arr)/sizeof(arr[0]);
  
  int sum = 0;
  for(int i=0;i<n;++i) sum+=arr[i];
  if( sum%3 == 0){
    int temp_sum = 0;
    for(int i=0;i<n;++i){
      temp_sum += arr[i];
      if( temp_sum == (sum/3) ) cout<<"( "<<i<<",";
      if( temp_sum == ((sum*2)/3) ) {
        cout<<i<<" )";
        break;}
      }
      // If indices are not found, then
      if(i==(n-1)) cout<<"-1";
  }
  else cout<<"-1";
  
  return 0;
  }
