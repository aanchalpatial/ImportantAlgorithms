/*
Given a Binary Tree having random pointers clone the Binary Tree. The task is to complete the function cloneTree which
take one argument the root of the tree to be copied and should return the root of the cloned tree.
Problem Link : https://practice.geeksforgeeks.org/problems/clone-a-binary-tree/1
*/

/* A binary tree node has data, pointer to left child
   and a pointer to right child 
struct Node
{
    int data;
    Node* left;
    Node* right;
    Node *random;
};
*/


Node* cloneTree(Node* root)
{
   //we have similar type of question for singly linked list
   //https://github.com/ap0996/ImportantAlgorithms/blob/master/gfg/11)%20Linked%20List/Clone%20a%20linked%20list%20with%20random%20pointers
   
   if(root==NULL) return NULL;
    
    Node *nd = new Node(root->data);
    nd->left = cloneTree(root->left);
    nd->right = cloneTree(root->right);
    nd->random = root->random;
    return nd;
}

