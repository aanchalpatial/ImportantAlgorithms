
binary_search()
binary_search(start_ptr, end_ptr, ele)
Return Value : This function only checks if the element is present or not, 
               it does not give any information about the location of the element if it exists.
               * But we can find the index of elment by using lower_bound() with binary_search()

upper_bound() : first element that is strictly greater.
upper_bound(first_itr, last_itr, ele)
Return Value: ele < return_value            
              Returns an iterator pointing to the element just greater than ele.
              * if ele is greater than the largest array element(rightmost element) , largest element index is returned


lower_bound() : first element that is greater-or-equal. 
lower_bound(first_itr, last_itr, ele)   
Return Value: ele <= return_value           
              Returns an iterator pointing to the lower bound of the element ele. 
              If ele exists in the container, it returns an iterator pointing to ele 
              otherwise it returns same iterator as upper bound.
              * if ele is smaller than the smallest array element(leftmost element), smallest element index is returned

Note :- binary_search(), upper_bound() & lower_bound() works only with sorted sequences
             
Note :- Unlike lower_bound , the value pointed by the iterator returned by upper_bound function 
        cannot be equivalent to val , only greater.
        
Note :- ceil() & floor() generally used for single number but can also be used in an array
        ceil returns element greater than or equal to current element, ceil of an element in array represents lower_bound()
        floor returns element smaller than or equal to current element, 
        no correspondence of floor to any of binary_search(), lower_bound() or upper_bound()

