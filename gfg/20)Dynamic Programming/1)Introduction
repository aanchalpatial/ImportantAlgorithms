//optimisation over recursion

//1) memoization/Top Down : easy to implement, table entries are filled only on demand 
//2)tabulation/ Bottom Up : faster due to no recursive overheads, all table entries are filled one by one 

The 2 main properties of a problem that SUGGESTS that the given problem can be solved using Dynamic programming :-
//1) overlapping subproblems : In dynamic programming, computed solutions to subproblems are stored in a table so that these
donâ€™t have to be recomputed. So Dynamic Programming is not useful when there are no common (overlapping) subproblems because 
there is no point storing the solutions if they are not needed again
//2) optimal substructure property : A given problems has Optimal Substructure Property if optimal solution of the 
//given problem can be obtained by using optimal solutions of its subproblems.


//How to solve a Dynamic Programming Problem ? : https://www.geeksforgeeks.org/solve-dynamic-programming-problem/
