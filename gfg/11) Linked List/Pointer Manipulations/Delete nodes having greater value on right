/*LEETCODE: 2487
https://leetcode.com/problems/remove-nodes-from-linked-list/description/
You are given the head of a linked list.

Remove every node which has a node with a greater value anywhere to the right side of it.

Return the head of the modified linked list.

Example 1:

Input: head = [5,2,13,3,8]
Output: [13,8]
Explanation: The nodes that should be removed are 5, 2 and 3.
- Node 13 is to the right of node 5.
- Node 13 is to the right of node 2.
- Node 8 is to the right of node 3.
*/

Node *helper(Node *head){
    // 12 15 10 11 5 6 2 3
    if(head->next==NULL) return head;   //reached last node
    
    Node *rightNode = helper(head->next);
    if(head->data>=rightNode->data){    //if property is followed, link current node & return it
        head->next = rightNode;
        return head;
    }else{
        return rightNode;     //else return right node
    }
}


Node *compute(Node *head)
{   //method : traverse from right to left & link nodes only if they follow stated property
    return helper(head);
    
    //method 2 : reverse list, traverse from left to right, remove nodes which don't follow property  & then reverse back the list
}
