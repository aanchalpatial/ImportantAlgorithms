//1) UNIQUE-1
    //all elements occur even number of times except one number, find the odd occurring number
    int arr[]={1,4,6,1,8,6,8};
    int result=arr[0];
    for(int i=1;i<7;++i){
        result^=arr[i];
    }
    cout<<result<<endl<<endl;
    
    
    //2)UNIQUE-2 from github: imp_algorithms/Nagarro Code-N-Counter 3.0 Practice Round/Unique Number 2
    
    
    //3) You are given a list of n-1 integers and these integers are in the range of 1 to n
    //Find the Missing Number
    /*1. XOR all the array elements, let the result of XOR be X1.
     2. XOR all numbers from 1 to n, let XOR be X2.
     3. XOR of X1 and X2 gives the missing number.*/
     int arrr[]={1,6,3,5,2};
     int result1=1,result2=arrr[0];
     for(int i=2;i<=6;++i){result1^=i;}
     for(int i=1;i<5;++i){result2^=arrr[i];}
     int result3=result1^result2;
     cout<<result3<<endl<<endl;
