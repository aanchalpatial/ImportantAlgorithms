//Think of a solution which is 0(nlogn) time & 0(1) extra space
#include <bits/stdc++.h>
using namespace std;

void mergeOverlappingIntervals(vector<pair<int, int>> arr){
    sort(arr.begin(), arr.end());
    //vector<pair<int, int>> result;
    int ind = -1;
    for(int i=0;i<arr.size();++i){
        if(arr[i].second >= arr[i+1].first && i!=arr.size()-1){
            
            int first = min(arr[i].first, arr[i+1].first);
            int second = max(arr[i].second, arr[i+1].second);
            arr[i+1].first = first;
            arr[i+1].second = second;
        }else {
            //result.push_back(arr[i]);
            arr[++ind] = arr[i];            //0(1) space
        }
    }
//     for(int i=0;i<result.size();++i){
// 	    cout<<"{"<<result[i].first<<","<<result[i].second<<"} ";
// 	}
    for(int i=0;i<=ind;++i){
        cout<<"{"<<arr[i].first<<","<<arr[i].second<<"} ";
    }
	cout<<endl;
    
}

int main() {
	
	vector<pair<int, int>> arr = {{7,9}, {6,10}, {4,4}, {1,4}, {2,4}, {2,3} };
	//{{1,3}, {2,4}, {5,7}, {6,8}};
	
	mergeOverlappingIntervals(arr);
	
	return 0;
}
