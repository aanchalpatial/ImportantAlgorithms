/* Given a set of coin values {c1,c2,...,ck} and a sum of money x, our task is to form the sum x 
using as few coins as possible.The greedy algorithm does not necessarily produce an optimal solution.*/

#include<bits/stdc++.h>
using namespace std;

int arr[3]={1,3,4};
int d[100];                  // array used for memoization
int smallestNumberOfCoins(int x)
{   
    int result = 10e6;       //The code assumes 10^6 denotes infinity.
    if(x<0) return 10e6;
    if(x==0) return 0;
    if(d[x] != -1){ return d[x];}
    else {
        for(int i=0;i<3;++i){
            result = min(result,smallestNumberOfCoins(x-arr[i])+1);}
    }
    d[x] = result;          //memoization
    return d[x];
    
}
int main(){
    
    memset(d, -1, sizeof(d));   //initialising all values of array with -1
    
    for(int i=0;i<11;++i){
        cout<<"f("<<i<<") = "<<smallestNumberOfCoins(i)<<"\n";
    }
    
    return 0;
}
